apiVersion: opentelemetry.io/${otel_api-version}
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: monitoring-tools
spec:
  managementState: managed
  env:
    - name: "CLOUD_REGION"
      value: "sa-saopaulo-1"
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  mode: daemonset
  image: otel/opentelemetry-collector-contrib:${otel_version} # k8s 1.22 use this 0.115.1
  volumeMounts:
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
  securityContext:
    privileged: true
    capabilities:
      add:
        - DAC_READ_SEARCH
        - SYS_ADMIN      
  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

      filelog:
        include:
          - /var/log/pods/*/*/*.log
          - /var/log/containers/*/*.log
        exclude:
          - /var/log/pods/*/otel-collector-collector/*.log
        start_at: end
        include_file_path: true
        include_file_name: false
        operators:
          # parse container logs
          - type: container
            id: container-parser

      k8s_cluster:
        auth_type: serviceAccount
        collection_interval: 10s
        node_conditions_to_report:
          - Ready
          - MemoryPressure

      k8sobjects:
        auth_type: serviceAccount
        objects:
          - name: pods
            mode: watch
          - name: events
            mode: watch
            group: events.k8s.io
            exclude_watch_type:
              - ADDED
              - MODIFIED

      prometheus:
        config:
          scrape_configs:
            - job_name: "kubernetes-pods"
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels:
                    [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels:
                    [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels:
                    [
                      __address__,
                      __meta_kubernetes_pod_annotation_prometheus_io_port,
                    ]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
                - source_labels: [__meta_kubernetes_pod_node_name]
                  action: keep
                  regex: $(K8S_NODE_NAME)             

    processors:
      resource:
        attributes:
          - key: k8s.cluster.name
            value: "corp-hml"
            action: upsert
          - key: location
            value: "sa-saopaulo-1"
            action: insert
          - key: environment
            value: "hml"
            action: insert

      k8sattributes:
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.pod.start_time
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection

      batch:
        send_batch_size: 8192
        timeout: 5s

      memory_limiter:
        check_interval: 10s
        limit_percentage: 50
        spike_limit_percentage: 30

    exporters:
      loki:
        endpoint: "http://${otel_endpoint_loki}:3100/loki/api/v1/push"
        default_labels_enabled:
          exporter: false
          job: true
        tls:
          insecure: true

      otlp/tempo:
        endpoint: "http://${otel_endpoint_tempo}:4317"
        tls:
          insecure: true

      prometheus:
        endpoint: 0.0.0.0:8889

      debug:
        verbosity: detailed

    service:
      pipelines:
        traces:
          receivers:
            - otlp
          processors:
            - resource
            - k8sattributes
            - batch
          exporters:
            - otlp/tempo
        logs:
          receivers:
            - otlp
            - filelog
            - k8sobjects
            - k8s_cluster
          processors:
            - resource
            - k8sattributes
            - memory_limiter
            - batch
          exporters:
            - loki
        metrics:
          receivers:
            - prometheus
            - k8s_cluster
          processors:
            - resource
            - memory_limiter
            - batch
          exporters:
            - prometheus  